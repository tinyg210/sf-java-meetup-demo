name: Create Infra on LocalStack

on:
  push:
    paths-ignore:
      - 'README.md'
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # “At 00:00 on Sunday.”
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  infrastructure-check:
    name: Setup infrastructure using Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Maven
        run: sudo apt-get install -y maven

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install -y terraform

      - name: Install localstack, tflocal & awslocal
        run: |
          sudo apt-get update && sudo apt-get install -y terraform
          pip install localstack
          pip install terraform-local
          pip install awscli-local

      - name: Build project
        run: |
          cd shipment-picture-lambda-validator
          mvn clean package shade:shade
          mv target/shipment-picture-lambda-validator.jar ../terraform/shipment-picture-lambda-validator/shipment-picture-lambda-validator.jar
          cd ..

      - name: Start LocalStack
        env:
          LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}
        run: |
          docker compose up -d
          echo "Startup complete"

      - name: Run Terraform Config File
        run: |
          cd terraform
          tflocal init
          tflocal apply --auto-approve

      - name: Check for Bucket
        run: |
          output=$(awslocal s3api list-buckets --query "Buckets[?contains(Name, 'shipment-picture-bucket')].Name" --output text)
          if [ -z "$output" ]; then
            echo "Created bucket not found."
            exit 1
          else echo "Bucket with random name was found: $output"
          fi

      - name: Create Ephemeral Instance
        env:
          LOCALSTACK_AUTH_TOKEN: ${{ secrets.LOCALSTACK_AUTH_TOKEN }}
        if: success()
        run: |
          localstack pod save java-meetup-shipment-list
          localstack ephemeral create --name java-meetup-test --env AUTO_LOAD_POD=java-meetup-shipment-list
